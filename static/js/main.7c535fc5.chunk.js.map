{"version":3,"sources":["sections/Footer/Footer.tsx","sections/Header/Header.tsx","sections/Main/Game/sections/Answers.tsx","sections/Main/Game/sections/Question.tsx","sections/Main/models/Answer.ts","sections/Main/models/Question.ts","services/data.ts","services/QuestionRepository.ts","sections/Main/Game/Game.tsx","sections/Main/useGame.ts","sections/Main/Main.tsx","App.tsx","index.tsx"],"names":["Footer","year","Date","getFullYear","Header","className","Answers","answers","handleClick","shuffledAnswers","shuffle","map","answer","Button","key","choice","onClick","e","Question","question","Jumbotron","Answer","data","status","Object","assign","this","link","questionsRepository","questions","Game","useState","setQuestions","gameIsOn","setGameIsOn","currentQuestionId","setCurrentQuestionId","correctAnswer","find","a","useEffect","length","startGame","get","currentTarget","textContent","console","log","useGame","message","currentQuestion","Message","Main","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7c535fc5.chunk.js","sourcesContent":["import React from 'react';\n\nexport const Footer: React.FC = () => {\n  const date = new Date();\n  const year = date.getFullYear();\n\n  return (\n    <>\n      <footer>&copy; {year} Oscar Villalta</footer>\n    </>\n  );\n};\n","import React from 'react';\n\nexport const Header: React.FC = () => (\n  <div className=\"header\">\n    <h1>Weird Trivia Fun</h1>\n  </div>\n);\n","import React from 'react';\nimport { Button } from 'react-bootstrap';\nimport { Answer } from 'sections/Main/models/Answer';\nimport { shuffle } from 'lodash';\n\nexport const Answers: React.FC<AnswerProps> = ({ answers, handleClick }) => {\n  const shuffledAnswers = shuffle(answers) || [];\n\n  return (\n    <>\n      {shuffledAnswers.map(answer => (\n        <Button key={answer.choice} onClick={(e: React.MouseEvent<HTMLButtonElement>) => handleClick(e)}>\n          {answer.choice}\n        </Button>\n      ))}\n    </>\n  );\n};\n\ninterface AnswerProps {\n  answers: Answer[];\n  handleClick: (e: React.MouseEvent<HTMLButtonElement>) => void;\n}\n","import React from 'react';\nimport { Jumbotron } from 'react-bootstrap';\n\nexport const Question: React.FC<QuestionProps> = ({ question }) => (\n  <>\n    <Jumbotron>\n      <h2>{question}</h2>\n    </Jumbotron>\n  </>\n);\n\ninterface QuestionProps {\n  question: string;\n}\n","export class Answer {\n  choice: string = '';\n  status: boolean = false;\n\n  constructor(data: Partial<Answer> = {}) {\n    Object.assign(this, data);\n  }\n}\n","import { Answer } from 'sections/Main/models/Answer';\n\nexport class Question {\n  question: string = '';\n  answers: Answer[] = [];\n\n  constructor(data: Partial<Question> = {}) {\n    Object.assign(this, data);\n  }\n}\n","export const data = [\n  {\n    question: 'If a person holds 3 widgets, How many tires can fit in a locker?',\n    answers: [\n      {\n        choice: 'Banana',\n        status: true,\n      },\n      {\n        choice: 'Dirt',\n        status: false,\n      },\n      {\n        choice: 'Umbrella',\n        status: false,\n      },\n      {\n        choice: 'Square root of a triangle',\n        status: false,\n      },\n    ],\n    link: 'somelink.com',\n  },\n  {\n    question: 'If a plane is going 300mph, does Puppy like gyros?',\n    answers: [\n      {\n        choice: 'James Cameron',\n        status: true,\n      },\n      {\n        choice: 'Martian',\n        status: false,\n      },\n      {\n        choice: 'Guitar',\n        status: false,\n      },\n      {\n        choice: 'Javascript',\n        status: false,\n      },\n    ],\n    link: 'somelink.com',\n  },\n  {\n    question: '10 times 6 is...',\n    answers: [\n      {\n        choice: 'Car',\n        status: true,\n      },\n      {\n        choice: 'George Washington',\n        status: false,\n      },\n      {\n        choice: 'Perpetual Motion',\n        status: false,\n      },\n      {\n        choice: 'Tower of Hanoi',\n        status: false,\n      },\n    ],\n    link: 'somelink.com',\n  },\n  {\n    question: 'The seven dwarfs are part of which highway',\n    answers: [\n      {\n        choice: 'Hans Christian Anderson',\n        status: true,\n      },\n      {\n        choice: 'Hamster',\n        status: false,\n      },\n      {\n        choice: '17 USD',\n        status: false,\n      },\n      {\n        choice: 'Aorta',\n        status: false,\n      },\n    ],\n    link: 'somelink.com',\n  },\n  {\n    question: 'Dallas, Massachussets is adjacent to the cellular membrane on which sandwich?',\n    answers: [\n      {\n        choice: 'Salacious Crumb',\n        status: true,\n      },\n      {\n        choice: 'Pneumonoultramicroscopicsilicovolcanoconiosis',\n        status: false,\n      },\n      {\n        choice: '6 of Diamonds',\n        status: false,\n      },\n      {\n        choice: 'Twelveteen',\n        status: false,\n      },\n    ],\n    link: 'somelink.com',\n  },\n  {\n    question: 'Udo has a grain of salt. There are many wolves in a hectare.  Is rose the color of a prodigy?',\n    answers: [\n      {\n        choice: 'Truffles',\n        status: true,\n      },\n      {\n        choice: 'Axe Body Spray',\n        status: false,\n      },\n      {\n        choice: 'C',\n        status: false,\n      },\n      {\n        choice: 'Vincent Van Gogh',\n        status: false,\n      },\n    ],\n    link: 'somelink.com',\n  },\n  {\n    question: 'Actor, inanimate carbon rod, stars in which Sci-Fi potato?',\n    answers: [\n      {\n        choice: 'Yardstick',\n        status: true,\n      },\n      {\n        choice: 'Blue',\n        status: false,\n      },\n      {\n        choice: 'February 14th 2008',\n        status: false,\n      },\n      {\n        choice: 'Chicago Bulls',\n        status: false,\n      },\n    ],\n    link: 'somelink.com',\n  },\n  {\n    question: 'A crystalline solution of ketchup is also known as...',\n    answers: [\n      {\n        choice: 'External Occipital Protubrance',\n        status: true,\n      },\n      {\n        choice: 'Edgar Allen Poe',\n        status: false,\n      },\n      {\n        choice: 'Horse',\n        status: false,\n      },\n      {\n        choice: 'Ceiling Fan',\n        status: false,\n      },\n    ],\n    link: 'somelink.com',\n  },\n  {\n    question: 'Where is the tallest amoeba in a walnut located.',\n    answers: [\n      {\n        choice: 'Roast Beef Sandwich',\n        status: true,\n      },\n      {\n        choice: 'Labor Pains',\n        status: false,\n      },\n      {\n        choice: 'Jaundice',\n        status: false,\n      },\n      {\n        choice: 'A-10 Thunderbolt',\n        status: false,\n      },\n    ],\n    link: 'somelink.com',\n  },\n  {\n    question: 'During the War of 485, cosmonauts invented which Tetris Game?',\n    answers: [\n      {\n        choice: 'Astral Projection',\n        status: true,\n      },\n      {\n        choice: 'Lightning and Thunder',\n        status: false,\n      },\n      {\n        choice: 'NORAD',\n        status: false,\n      },\n      {\n        choice: 'Isildur',\n        status: false,\n      },\n    ],\n    link: 'somelink.com',\n  },\n  {\n    question: 'Human Centipedes are most commonly used for this type of degenerative tissue behavior.',\n    answers: [\n      {\n        choice: '10,000 Maniacs',\n        status: true,\n      },\n      {\n        choice: 'Speed of Sound',\n        status: false,\n      },\n      {\n        choice: 'Array of Objects',\n        status: false,\n      },\n      {\n        choice: 'a battery',\n        status: false,\n      },\n    ],\n    link: 'somelink.com',\n  },\n  {\n    question: 'Peanut butter and waffled french fries, sometimes, are referred to this type of oil change',\n    answers: [\n      {\n        choice: 'The Quickening',\n        status: true,\n      },\n      {\n        choice: 'UMDNJ',\n        status: false,\n      },\n      {\n        choice: 'United Airlines',\n        status: false,\n      },\n      {\n        choice: 'Grover Cleveland',\n        status: false,\n      },\n    ],\n    link: 'somelink.com',\n  },\n];\n","import { shuffle } from 'lodash';\nimport { Question } from 'sections/Main/models/Question';\nimport { data } from 'services/data';\n\nclass QuestionsRepository {\n  get() {\n    const questions = data.map(question => {\n      return new Question(question);\n    });\n\n    return shuffle(questions);\n  }\n}\n\nexport const questionsRepository = new QuestionsRepository();\n","import React, { useState } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { Answers } from 'sections/Main/Game/sections/Answers';\nimport { Question } from 'sections/Main/Game/sections/Question';\nimport { useGame } from 'sections/Main/useGame';\n\nexport const Game: React.FC = () => {\n  const { currentQuestionId, handleClick, gameIsOn, startGame, questions } = useGame();\n\n  const [message, setMessage] = useState('hello world');\n\n  const currentQuestion = questions[currentQuestionId];\n\n  if (!gameIsOn) {\n    return (\n      <div className=\"game start-page\">\n        <Button onClick={startGame}>Start Game</Button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"game\">\n      <div className=\"question-wrapper\">\n        <Question question={currentQuestion.question} />\n      </div>\n      <div className=\"text-center pt-1 pb-1 bg-success \">\n        <Message message={message} />\n      </div>\n      <div className=\"answer-wrapper\">\n        <Answers answers={currentQuestion.answers} handleClick={handleClick} />\n      </div>\n    </div>\n  );\n};\n\nconst Message: React.FC<{ message: string }> = ({ message }) => (\n  <>\n    <h3>{message}</h3>\n  </>\n);\n","import { find } from 'lodash';\nimport { useEffect, useState } from 'react';\nimport { Answer } from 'sections/Main/models/Answer';\nimport { Question } from 'sections/Main/models/Question';\nimport { questionsRepository } from 'services/QuestionRepository';\n\nexport const useGame = () => {\n  const [questions, setQuestions] = useState([new Question()]);\n  const [gameIsOn, setGameIsOn] = useState(false);\n  const [currentQuestionId, setCurrentQuestionId] = useState(0);\n\n  const { answers } = questions[currentQuestionId];\n\n  const correctAnswer = (find(answers, (a: any) => a.status) as Answer) || new Answer(); // not sure if this catches a bad value\n\n  useEffect(() => {\n    if (currentQuestionId === questions.length - 1) {\n      setGameIsOn(false);\n\n      return;\n    }\n  }, [currentQuestionId, questions]);\n\n  const startGame = () => {\n    setQuestions(questionsRepository.get());\n    setCurrentQuestionId(0);\n    setGameIsOn(true);\n  };\n\n  const handleClick = (e: React.MouseEvent<HTMLButtonElement>) => {\n    const choice = e.currentTarget.textContent;\n\n    if (choice === correctAnswer.choice) {\n      setCurrentQuestionId(currentQuestionId + 1);\n\n      return;\n    }\n\n    console.log('choose again...');\n  };\n\n  return {\n    gameIsOn,\n    currentQuestionId,\n    startGame,\n    handleClick,\n    questions,\n  };\n};\n","import React from 'react';\nimport { Game } from 'sections/Main/Game/Game';\n\nexport const Main: React.FC = () => <Game />;\n","import React from 'react';\nimport { Footer } from 'sections/Footer/Footer';\nimport { Header } from 'sections/Header/Header';\nimport { Main } from 'sections/Main/Main';\n\nexport const App: React.FC = () => (\n  <div className=\"app\">\n    <Header />\n\n    <div className=\"main\">\n      <Main />\n    </div>\n\n    <Footer />\n  </div>\n);\n\n// will need something to control the timers, maybe a hook\n\n// try to hook this to some API to get questions\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from 'App';\nimport './index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}