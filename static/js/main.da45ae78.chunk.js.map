{"version":3,"sources":["sections/Footer/Footer.tsx","sections/Header/Header.tsx","sections/Main/Game/sections/Answers.tsx","sections/Main/Game/sections/Question.tsx","sections/Main/Game/GameView.tsx","sections/Main/Game/Game.tsx","sections/Main/Game/useGame.ts","sections/Main/models/Question.ts","services/data.ts","services/QuestionRepository.ts","sections/Main/Main.tsx","App.tsx","index.tsx"],"names":["Footer","year","Date","getFullYear","Header","className","Answers","answers","handleClick","shuffledAnswers","shuffle","Button","onClick","choice","Question","question","Jumbotron","GameView","Game","questions","useState","gameIsOn","setGameIsOn","questionNumber","setQuestionNumber","startGame","length","useGame","data","Object","assign","this","status","link","questionsRepository","map","Main","get","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.da45ae78.chunk.js","sourcesContent":["import React from 'react';\n\nexport const Footer: React.FC = () => {\n  const date = new Date();\n  const year = date.getFullYear();\n\n  return (\n    <>\n      <footer>&copy; {year} Oscar Villalta</footer>\n    </>\n  );\n};\n","import React from 'react';\n\nexport const Header: React.FC = () => (\n  <div className=\"header\">\n    <h1>Weird Trivia Fun</h1>\n  </div>\n);\n","import React from 'react';\nimport { Button } from 'react-bootstrap';\nimport { Answer } from 'sections/Main/models/Answer';\nimport { shuffle } from 'lodash';\n\nexport const Answers: React.FC<AnswerProps> = ({ answers, handleClick }) => {\n  const shuffledAnswers = shuffle(answers);\n\n  return (\n    <>\n      <Button onClick={handleClick}>{shuffledAnswers[0].choice}</Button>\n      <Button onClick={handleClick}>{shuffledAnswers[1].choice}</Button>\n      <Button onClick={handleClick}>{shuffledAnswers[2].choice}</Button>\n      <Button onClick={handleClick}>{shuffledAnswers[3].choice}</Button>\n    </>\n  );\n};\n\ninterface AnswerProps {\n  answers: Answer[];\n  handleClick: () => void;\n}\n","import React from 'react';\nimport { Jumbotron } from 'react-bootstrap';\n\nexport const Question: React.FC<QuestionProps> = ({ question }) => (\n  <>\n    <Jumbotron>\n      <h2>{question}</h2>\n    </Jumbotron>\n  </>\n);\n\ninterface QuestionProps {\n  question: string;\n}\n","import React from 'react';\nimport { Answers } from 'sections/Main/Game/sections/Answers';\nimport { Question } from 'sections/Main/Game/sections/Question';\nimport { Answer } from 'sections/Main/models/Answer';\n\nexport const GameView: React.FC<GameViewProps> = ({ question, answers, handleClick }) => (\n  <>\n    <div className=\"question-wrapper\">\n      <Question question={question} />\n    </div>\n    <div className=\"answer-wrapper\">\n      <Answers answers={answers} handleClick={handleClick} />\n    </div>\n  </>\n);\n\ninterface GameViewProps {\n  question: string;\n  answers: Answer[];\n  handleClick: () => void;\n}\n","import React from 'react';\nimport { Button } from 'react-bootstrap';\nimport { GameView } from 'sections/Main/Game/GameView';\nimport { useGame } from 'sections/Main/Game/useGame';\nimport { Question } from 'sections/Main/models/Question';\n\nexport const Game: React.FC<GameProps> = ({ questions }) => {\n  const { questionNumber, handleClick, gameIsOn, startGame } = useGame(questions);\n\n  const question = questions[questionNumber];\n\n  if (!gameIsOn) {\n    return (\n      <div className=\"start-menu\">\n        <Button onClick={startGame}>Start Game</Button>\n      </div>\n    );\n  }\n\n  return (\n    <>\n      <GameView question={question.question} answers={question.answers} handleClick={handleClick} />\n    </>\n  );\n};\n\ninterface GameProps {\n  questions: Question[];\n}\n","import { useState } from 'react';\n\nexport const useGame = (questions: any) => {\n  const [gameIsOn, setGameIsOn] = useState(false);\n  const [questionNumber, setQuestionNumber] = useState(0);\n\n  const startGame = () => {\n    setQuestionNumber(0);\n    setGameIsOn(true);\n  };\n\n  const handleClick = () => {\n    if (questionNumber >= questions.length - 1) {\n      setGameIsOn(false);\n\n      return;\n    }\n\n    setQuestionNumber(questionNumber + 1);\n  };\n\n  return {\n    gameIsOn,\n    questionNumber,\n    startGame,\n    handleClick,\n  };\n};\n","import { Answer } from 'sections/Main/models/Answer';\n\nexport class Question {\n  question: string = '';\n  answers: Answer[] = [];\n\n  constructor(data: Partial<Question> = {}) {\n    Object.assign(this, data);\n  }\n}\n","export const data = [\n  {\n    question: 'If a person holds 3 widgets, How many tires can fit in a locker?',\n    answers: [\n      {\n        choice: 'Banana',\n        status: true,\n      },\n      {\n        choice: 'Dirt',\n        status: false,\n      },\n      {\n        choice: 'Umbrella',\n        status: false,\n      },\n      {\n        choice: 'Square root of a triangle',\n        status: false,\n      },\n    ],\n    link: 'somelink.com',\n  },\n  {\n    question: 'If a plane is going 300mph, does Puppy like gyros?',\n    answers: [\n      {\n        choice: 'James Cameron',\n        status: true,\n      },\n      {\n        choice: 'Martian',\n        status: false,\n      },\n      {\n        choice: 'Guitar',\n        status: false,\n      },\n      {\n        choice: 'Javascript',\n        status: false,\n      },\n    ],\n    link: 'somelink.com',\n  },\n  {\n    question: '10 times 6 is...',\n    answers: [\n      {\n        choice: 'Car',\n        status: true,\n      },\n      {\n        choice: 'George Washington',\n        status: false,\n      },\n      {\n        choice: 'Perpetual Motion',\n        status: false,\n      },\n      {\n        choice: 'Tower of Hanoi',\n        status: false,\n      },\n    ],\n    link: 'somelink.com',\n  },\n  {\n    question: 'The seven dwarfs are part of which highway',\n    answers: [\n      {\n        choice: 'Hans Christian Anderson',\n        status: true,\n      },\n      {\n        choice: 'Hamster',\n        status: false,\n      },\n      {\n        choice: '17 USD',\n        status: false,\n      },\n      {\n        choice: 'Aorta',\n        status: false,\n      },\n    ],\n    link: 'somelink.com',\n  },\n  {\n    question: 'Dallas, Massachussets is adjacent to the cellular membrane on which sandwich?',\n    answers: [\n      {\n        choice: 'Salacious Crumb',\n        status: true,\n      },\n      {\n        choice: 'Pneumonoultramicroscopicsilicovolcanoconiosis',\n        status: false,\n      },\n      {\n        choice: '6 of Diamonds',\n        status: false,\n      },\n      {\n        choice: 'Twelveteen',\n        status: false,\n      },\n    ],\n    link: 'somelink.com',\n  },\n  {\n    question: 'Udo has a grain of salt. There are many wolves in a hectare.  Is rose the color of a prodigy?',\n    answers: [\n      {\n        choice: 'Truffles',\n        status: true,\n      },\n      {\n        choice: 'Axe Body Spray',\n        status: false,\n      },\n      {\n        choice: 'C',\n        status: false,\n      },\n      {\n        choice: 'Vincent Van Gogh',\n        status: false,\n      },\n    ],\n    link: 'somelink.com',\n  },\n  {\n    question: 'Actor, inanimate carbon rod, stars in which Sci-Fi potato?',\n    answers: [\n      {\n        choice: 'Yardstick',\n        status: true,\n      },\n      {\n        choice: 'Blue',\n        status: false,\n      },\n      {\n        choice: 'February 14th 2008',\n        status: false,\n      },\n      {\n        choice: 'Chicago Bulls',\n        status: false,\n      },\n    ],\n    link: 'somelink.com',\n  },\n  {\n    question: 'A crystalline solution of ketchup is also known as...',\n    answers: [\n      {\n        choice: 'External Occipital Protubrance',\n        status: true,\n      },\n      {\n        choice: 'Edgar Allen Poe',\n        status: false,\n      },\n      {\n        choice: 'Horse',\n        status: false,\n      },\n      {\n        choice: 'Ceiling Fan',\n        status: false,\n      },\n    ],\n    link: 'somelink.com',\n  },\n  {\n    question: 'Where is the tallest amoeba in a walnut located.',\n    answers: [\n      {\n        choice: 'Roast Beef Sandwich',\n        status: true,\n      },\n      {\n        choice: 'Labor Pains',\n        status: false,\n      },\n      {\n        choice: 'Jaundice',\n        status: false,\n      },\n      {\n        choice: 'A-10 Thunderbolt',\n        status: false,\n      },\n    ],\n    link: 'somelink.com',\n  },\n  {\n    question: 'During the War of 485, cosmonauts invented which Tetris Game?',\n    answers: [\n      {\n        choice: 'Astral Projection',\n        status: true,\n      },\n      {\n        choice: 'Lightning and Thunder',\n        status: false,\n      },\n      {\n        choice: 'NORAD',\n        status: false,\n      },\n      {\n        choice: 'Isildur',\n        status: false,\n      },\n    ],\n    link: 'somelink.com',\n  },\n  {\n    question: 'Human Centipedes are most commonly used for this type of degenerative tissue behavior.',\n    answers: [\n      {\n        choice: '10,000 Maniacs',\n        status: true,\n      },\n      {\n        choice: 'Speed of Sound',\n        status: false,\n      },\n      {\n        choice: 'Array of Objects',\n        status: false,\n      },\n      {\n        choice: 'a battery',\n        status: false,\n      },\n    ],\n    link: 'somelink.com',\n  },\n  {\n    question: 'Peanut butter and waffled french fries, sometimes, are referred to this type of oil change',\n    answers: [\n      {\n        choice: 'The Quickening',\n        status: true,\n      },\n      {\n        choice: 'UMDNJ',\n        status: false,\n      },\n      {\n        choice: 'United Airlines',\n        status: false,\n      },\n      {\n        choice: 'Grover Cleveland',\n        status: false,\n      },\n    ],\n    link: 'somelink.com',\n  },\n];\n","import { shuffle } from 'lodash';\nimport { Question } from 'sections/Main/models/Question';\nimport { data } from 'services/data';\n\nclass QuestionsRepository {\n  get() {\n    const questions = data.map(question => {\n      return new Question(question);\n    });\n\n    return shuffle(questions);\n  }\n}\n\nexport const questionsRepository = new QuestionsRepository();\n","import React from 'react';\nimport { Game } from 'sections/Main/Game/Game';\nimport { questionsRepository } from 'services/QuestionRepository';\n\nexport const Main: React.FC = () => {\n  const questions = questionsRepository.get();\n\n  return <Game questions={questions} />;\n};\n","import React from 'react';\nimport { Footer } from 'sections/Footer/Footer';\nimport { Header } from 'sections/Header/Header';\nimport { Main } from 'sections/Main/Main';\n\nexport const App: React.FC = () => (\n  <div className=\"app\">\n    <Header />\n\n    <div className=\"main\">\n      <Main />\n    </div>\n\n    <Footer />\n  </div>\n);\n\n// will need something to control the timers, maybe a hook\n\n// try to hook this to some API to get questions\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from 'App';\nimport './index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}